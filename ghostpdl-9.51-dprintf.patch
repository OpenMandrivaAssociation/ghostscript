diff -up ghostpdl-10.02.0/base/gdevmpla.c.6~ ghostpdl-10.02.0/base/gdevmpla.c
--- ghostpdl-10.02.0/base/gdevmpla.c.6~	2023-09-12 14:40:30.000000000 +0200
+++ ghostpdl-10.02.0/base/gdevmpla.c	2023-09-13 12:04:25.884403672 +0200
@@ -1033,7 +1033,7 @@ mem_planar_strip_tile_rect_devn(gx_devic
         }
 #ifdef DEBUG
         if (c0 == gx_no_color_index && c1 == gx_no_color_index) {
-            dprintf("mem_planar_strip_tile_rect_dev called with two non-devn colors\n");
+            d_printf("mem_planar_strip_tile_rect_dev called with two non-devn colors\n");
         }
 #endif
         MEM_SET_PARAMS(mdev, plane_depth);
diff -up ghostpdl-10.02.0/base/gxclrect.c.6~ ghostpdl-10.02.0/base/gxclrect.c
--- ghostpdl-10.02.0/base/gxclrect.c.6~	2023-09-12 14:40:30.000000000 +0200
+++ ghostpdl-10.02.0/base/gxclrect.c	2023-09-13 12:04:25.884574805 +0200
@@ -942,7 +942,7 @@ clist_copy_planes(gx_device * dev,
 
 #ifdef DEBUG
     if (plane_height == 0) {
-        dprintf("clist_copy_planes called with plane_height == 0.\n");
+      d_printf("clist_copy_planes called with plane_height == 0.\n");
     }
 #endif
 
diff -up ghostpdl-10.02.0/base/gxfapi.c.6~ ghostpdl-10.02.0/base/gxfapi.c
--- ghostpdl-10.02.0/base/gxfapi.c.6~	2023-09-12 14:40:30.000000000 +0200
+++ ghostpdl-10.02.0/base/gxfapi.c	2023-09-13 12:04:25.884769532 +0200
@@ -1823,13 +1823,13 @@ gs_fapi_passfont(gs_font *pfont, int sub
         }
         if (!I) {
             if (gs_debug_c('1'))
-                dprintf("not found. Falling back to normal plugin search\n");
+                d_printf("not found. Falling back to normal plugin search\n");
             list = (gs_fapi_server **) gs_fapi_get_server_list(mem);
             I = *list;
         }
         else {
             if (gs_debug_c('1'))
-                dprintf("found.\n");
+                d_printf("found.\n");
             do_restart = true;
         }
     }
diff -up ghostpdl-10.02.0/base/std.h.6~ ghostpdl-10.02.0/base/std.h
--- ghostpdl-10.02.0/base/std.h.6~	2023-09-12 14:40:30.000000000 +0200
+++ ghostpdl-10.02.0/base/std.h	2023-09-13 12:04:25.884884659 +0200
@@ -126,7 +126,7 @@ typedef ulong bits32;
  * All these above functions/macros take a "const gs_memory_t *" pointer to
  * ensure that the correct stdout/stderr is used for the given gsapi instance.
  *
- * If you do not have a gs_memory_t * to hand, then you may call dprintf (and
+ * If you do not have a gs_memory_t * to hand, then you may call d_printf (and
  * family) and eprintf(and family) insteads. Be aware that these functions
  * compile away to nothing in non-DEBUG builds (and even in some DEBUG
  * environments), as they rely on platform specific threading tricks.
@@ -209,7 +209,7 @@ void dflush(void);              /* flush
 #define dlputc(chr) dlprintf1("%c", chr)
 #define dputs(str) dprintf1("%s", str)
 #define dlputs(str) dlprintf1("%s", str)
-#define dprintf(str)\
+#define d_printf(str)\
   dpf(str)
 #define dlprintf(str)\
   (_dpl dpf(str))
diff -up ghostpdl-10.02.0/contrib/gdevlx7.c.6~ ghostpdl-10.02.0/contrib/gdevlx7.c
--- ghostpdl-10.02.0/contrib/gdevlx7.c.6~	2023-09-12 14:40:30.000000000 +0200
+++ ghostpdl-10.02.0/contrib/gdevlx7.c	2023-09-13 12:04:25.884951715 +0200
@@ -250,7 +250,7 @@ static void lex_eject(gp_file *out)
 {
    byte buf[4]={0x1b,0x2a,0x7,0x65};
 #ifdef DEBUG
-   dprintf("Sending page eject.\n");
+   d_printf("Sending page eject.\n");
 #endif
    gp_fwrite(buf,sizeof(buf),1,out);
 }
@@ -535,7 +535,7 @@ static int print_cols(gp_file *prn_strea
      {
 #if 0
         dprintf2("\n**RLE2 WIN** %d > %d \n",rle1size,rle2size);
-        dprintf("\nUsing RLE2 compression\n");
+        d_printf("\nUsing RLE2 compression\n");
 #endif
         memcpy(tbits,ob,rle2size);
         p=tbits+rle2size;
@@ -782,7 +782,7 @@ lxmgen_print_page(gx_device_printer *pde
                   obp,bwidth,lr_shift);
 
 #ifdef DEBUG
-            dprintf("Overflow workaround used\n");
+            d_printf("Overflow workaround used\n");
 #endif
          }
 
diff -up ghostpdl-10.02.0/contrib/japanese/gdevmjc.c.6~ ghostpdl-10.02.0/contrib/japanese/gdevmjc.c
--- ghostpdl-10.02.0/contrib/japanese/gdevmjc.c.6~	2023-09-12 14:40:30.000000000 +0200
+++ ghostpdl-10.02.0/contrib/japanese/gdevmjc.c	2023-09-13 12:04:25.885043969 +0200
@@ -889,7 +889,7 @@ xtal_plane( byte *dp , short *buf[] , by
         for ( i = 0 ; i < 100 ; i++ ) {
                 dprintf1("[%04X]",bar[0][i]);
         }
-        dprintf("\n");
+        d_printf("\n");
 */
         for ( i = 0 ; i < plane_size ; i++ ) {
                 bitmask = 0x80;
@@ -901,9 +901,9 @@ xtal_plane( byte *dp , short *buf[] , by
                 }
                 *oP++ = out;
         }
-/*dprintf("\n");*/
+/*d_printf("\n");*/
         p = buf[0];
-/*	dprintf("\n"); */
+/*	d_printf("\n"); */
         buf[0] = buf[1];
         buf[1] = p;
 
@@ -1294,7 +1294,7 @@ mj_print_page(gx_device_printer * pdev,
                 dprintf4 ( "[%02X%02X%02X%02X]" , p[0] , p[1] , p[2] , p[3] );
                 p += 4;
         }
-        dprintf("\n");
+        d_printf("\n");
 
 }
 */
diff -up ghostpdl-10.02.0/cups/gdevcups.c.6~ ghostpdl-10.02.0/cups/gdevcups.c
--- ghostpdl-10.02.0/cups/gdevcups.c.6~	2023-09-12 14:40:30.000000000 +0200
+++ ghostpdl-10.02.0/cups/gdevcups.c	2023-09-13 12:04:25.885290504 +0200
@@ -862,7 +862,7 @@ cups_get_matrix(gx_device *pdev,	/* I -
     * Do landscape orientation...
     */
 #ifdef CUPS_DEBUG2
-    dprintf("DEBUG2: Landscape matrix: XX=0 XY=+1 YX=+1 YY=0\n");
+    d_printf("DEBUG2: Landscape matrix: XX=0 XY=+1 YX=+1 YY=0\n");
 #endif /* CUPS_DEBUG2 */
     pmat->xx = 0.0;
     pmat->xy = (float)cups->header.HWResolution[1] / 72.0;
diff -up ghostpdl-10.02.0/pdf/pdf_cmap.c.6~ ghostpdl-10.02.0/pdf/pdf_cmap.c
